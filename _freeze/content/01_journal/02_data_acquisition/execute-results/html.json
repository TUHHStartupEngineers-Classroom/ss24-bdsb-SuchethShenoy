{
  "hash": "3a1ae142c4670258150c584dd53d2d20",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Sucheth Shenoy\"\n---\n\n\n# Task 2.1: Get data from API - arXiv\n\n## Load Libraries\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_084f2a8dd49c6f9fc04dfb0c4be16291'}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(stringr)\nlibrary(tibble)\n```\n:::\n\n\n## Define the URL for the arXiv search page\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_501fe2820f44f781b6cea6f9490315e8'}\n\n```{.r .cell-code}\ntopic <- \"Koopman+Operator+Theory\"  # Replace with the topic you're interested in\nsearch_url <- paste0(\"https://arxiv.org/search/?query=\", topic, \"&searchtype=all&order=-announced_date_first&size=50\")\n```\n:::\n\n\n## Read the HTML content of the search page\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-3_a65fb12621ce2e26901cb317419e3f66'}\n\n```{.r .cell-code}\nsearch_page <- read_html(search_url)\n```\n:::\n\n\n## Extract the URLs of the search results (research papers)\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-4_4d1f3915fe547d57d7b4d2f5074291a4'}\n\n```{.r .cell-code}\npaper_urls <- search_page %>%\n  html_nodes(\"a\") %>%\n  html_attr(\"href\") %>%\n  str_subset(pattern = \"abs\")\n```\n:::\n\n\n## Create an empty Tibble to store data\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-5_ac80d5f828e18b966cd34c30db0f9773'}\n\n```{.r .cell-code}\npapers_info <- tibble(\n  title = character(),\n  url = character(),\n  abstract = character(),\n  author_names = character(),\n  submission_date = character()\n)\n```\n:::\n\n\n## Extract data for each research paper\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-6_27858840f29130b2eea84618cafad32d'}\n\n```{.r .cell-code}\nfor (url in paper_urls) {\n  paper_page <- read_html(url)\n  title <- paper_page %>%\n    html_node(\"title\") %>%\n    html_text() %>%\n    gsub(\"\\\\[\\\\d+\\\\.\\\\d+\\\\]\", \"\", .)\n  \n  abstract <- paper_page %>%\n    html_node(\"meta[property='og:description']\") %>%\n    html_attr(\"content\")\n  \n  author_names <- paper_page %>%\n    html_node(\".authors\") %>%\n    html_text() %>%\n    gsub(\"Authors:\", \"\", .) %>%\n    trimws()\n    \n  submission_date <- paper_page %>%\n    html_node(\".dateline\") %>%\n    html_text() %>%\n    gsub(\"\\\\[Submitted on |\\\\]\", \"\", .) %>%\n    trimws()\n  \n  papers_info <- papers_info %>%\n    add_row(\n      title = title,\n      url = url,\n      abstract = abstract,\n      author_names = author_names,\n      submission_date = submission_date\n    )\n}\n```\n:::\n\n\n## Print the first 10 rows of the Tibble\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-7_c7d399db95d6b11de2da57e849e2b545'}\n\n```{.r .cell-code}\nprint(head(papers_info, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 10 × 5\n#>    url                              title  abstract author_names submission_date\n#>    <chr>                            <chr>  <chr>    <chr>        <chr>          \n#>  1 https://arxiv.org/abs/2405.00627 [2405… \"Nonlin… Zexin Sun, … 1 May 2024     \n#>  2 https://arxiv.org/abs/2404.09130 [2404… \"The es… Domenico Li… 14 Apr 2024    \n#>  3 https://arxiv.org/abs/2404.02014 [2404… \"Dynami… Dipankar Ma… 2 Apr 2024     \n#>  4 https://arxiv.org/abs/2404.00112 [2404… \"The Si… Brian Charl… 29 Mar 2024    \n#>  5 https://arxiv.org/abs/2403.19297 [2403… \"We hav… Yuzuru Kato  28 Mar 2024    \n#>  6 https://arxiv.org/abs/2403.16306 [2403… \"The mo… H. Harry As… 24 Mar 2024    \n#>  7 https://arxiv.org/abs/2403.13366 [2403… \"In thi… Shahram Kho… 20 Mar 2024    \n#>  8 https://arxiv.org/abs/2403.12335 [2403… \"Absenc… Indranil Na… 19 Mar 2024    \n#>  9 https://arxiv.org/abs/2403.08965 [2403… \"The st… George Nehm… 13 Mar 2024    \n#> 10 https://arxiv.org/abs/2403.02524 [2403… \"This p… Isao Ishika… 4 Mar 2024 (v1…\n```\n:::\n:::\n\n\n# Task 2.2: Scrape competitor website (https://www.radon-bikes.de)\n\n## Load Libraries\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-8_0f6979a9704625817426a0774a971b3c'}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ purrr     1.0.2\n#> ✔ forcats   1.0.0     ✔ readr     2.1.5\n#> ✔ ggplot2   3.5.1     ✔ tidyr     1.3.1\n#> ✔ lubridate 1.9.3     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter()         masks stats::filter()\n#> ✖ readr::guess_encoding() masks rvest::guess_encoding()\n#> ✖ dplyr::lag()            masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)     # HTML Hacking & Web Scraping\nlibrary(xopen)     # Quickly opening URLs\n```\n:::\n\n\n## Collect Product Catalogues\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-9_570f902db8b1674e96b7c10ef544262e'}\n\n```{.r .cell-code}\nurl_home        <- \"https://www.radon-bikes.de/en\"\n\nhtml_home       <- read_html(url_home)\n\nbike_categories_chr <- html_home %>%\n  html_elements(\".megamenu a\") %>%\n  html_attr(\"href\") %>%\n  str_subset(pattern = \"#|wear\", negate = T) %>%\n  unique() %>%\n  str_c(\"https://www.radon-bikes.de\", ., sep = \"\")\n```\n:::\n\n\n## Function to get Bike urls\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-10_bd2df4159ffa8c692c309fd13c9c2f9f'}\n\n```{.r .cell-code}\nget_bike_urls <- function(url) {\n  \n  html_bike_category <- read_html(url)\n  \n  # Get the URLs\n  bike_url_chr  <- html_bike_category %>%\n    html_elements(\"a.a-button\") %>%\n    html_attr(\"href\") %>%\n    str_subset(pattern = \"bikegrid|slush|instagram\", negate = T) %>%\n    unique() %>%\n    str_c(\"https://www.radon-bikes.de\", ., sep = \"\")\n  \n  return(bike_url_chr)\n  \n}\n```\n:::\n\n\n## Get Bike urls and create a Tibble\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-11_91d09875a0e42034413acc52d5c077ef'}\n\n```{.r .cell-code}\nbike_urls_chr <- map(bike_categories_chr, get_bike_urls) |>\n  flatten_chr() |>\n  unique()\n\nbike_urls_tbl <- bike_urls_chr |>\n  tibble::as_tibble_col(column_name = \"url\") |>\n  tidyr::separate_wider_regex(cols = url, patterns = c(\".*de/en/\", family   = \"[^/]*\", \"/\",\n                                                       category = \"[^/]*\", \"/\",\n                                                       model_type    = \"[^/]*\", \"/\",\n                                                       model = \"[^/]*\", \"/\",\n                                                       \".*\"), cols_remove = F)\n```\n:::\n\n\n## Create a Tibble for the Bike Category: Hardtail\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-12_017525a562922c7ae794076f8fe2d625'}\n\n```{.r .cell-code}\nbike_urls_hardtail_tbl <- bike_urls_tbl |>\n  filter(category == \"hardtail\")\n```\n:::\n\n\n## Function to get bike model data\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-13_a51623735c669fd79fca578282ca2b9c'}\n\n```{.r .cell-code}\nget_model_data <- function(url) {\n  \n  html_bike_model <- read_html(url)\n  \n  bike_price <- html_bike_model |>\n    html_element(\".m-bikedetail__price--active\") |>\n    html_text() |>\n    parse_number()\n  \n  bike_data <- tibble(url   = url,\n                      price = bike_price)\n  \n  return(bike_data)\n  \n}\n```\n:::\n\n\n## Get bike model data for Hardtail category\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-14_ef1b63c5a55e1ed94c5fa0b0735e5807'}\n\n```{.r .cell-code}\nbike_model_data_tbl <- bike_urls_hardtail_tbl$url |> map_dfr(get_model_data)\n\nbike_model_data_joined_tbl <- bike_urls_hardtail_tbl |> \n  left_join(bike_model_data_tbl, by = join_by(\"url\"))\n```\n:::\n\n\n## Print the first 10 rows of the Tibble\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-15_873a10aeb4df6f40b3bb291fcd2b745c'}\n\n```{.r .cell-code}\nprint(head(bike_model_data_joined_tbl, 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 10 × 6\n#>    family       category model_type model                            url   price\n#>    <chr>        <chr>    <chr>      <chr>                            <chr> <dbl>\n#>  1 mountainbike hardtail jealous    jealous-80-2024                  http… 2520.\n#>  2 mountainbike hardtail jealous    jealous-90-2024                  http… 2856.\n#>  3 mountainbike hardtail jealous    jealous-100-ea-2024              http… 4369.\n#>  4 mountainbike hardtail jealous    jealous-80-2023                  http… 1848.\n#>  5 mountainbike hardtail jealous    jealous-90-2023                  http… 2184.\n#>  6 mountainbike hardtail jealous    jealous-100-2023                 http… 2772.\n#>  7 mountainbike hardtail jealous    jealous-100-ea-2023              http… 3781.\n#>  8 mountainbike hardtail jealous-al jealous-al-60-2024               http…  840.\n#>  9 mountainbike hardtail jealous-al jealous-al-60-2024-petroleumblue http…  840.\n#> 10 mountainbike hardtail jealous-al jealous-al-70-2024               http…  840.\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}