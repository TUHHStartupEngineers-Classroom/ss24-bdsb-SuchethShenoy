{
  "hash": "4b01f5bce30dba6a43f818d24f9dcac7",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Sucheth Shenoy\"\n---\n\n\n# Task 4.1\n\n## Load Libraries\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_2a4c9e58f6aff785a819064b8500abad'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n:::\n\n\n## Load Data\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_37b8bf5886b80797905a6c75e4ce4b1a'}\n\n```{.r .cell-code}\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 397517 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Data Wrangling\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-3_41a872b7a5bb1668fdd8a9ef54df2faf'}\n\n```{.r .cell-code}\ncovid_data_tbl_processed <- covid_data_tbl %>% \n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n\n# Filter data for specified countries\ncountries <- c(\"Germany\", \"UK\", \"France\", \"Spain\", \"USA\")\nfiltered_data <- covid_data_tbl_processed %>%\n  filter(location %in% countries) %>%\n  filter(total_cases > 0) # Filter out rows with zero total cases\n```\n:::\n\n\n## Data Visualization\n\n::: {.cell hash='04_data_visualization_cache/html/plot1_87827e81113b883ca2cb3dec40c94bdd'}\n\n```{.r .cell-code}\n# Custom color palette\ncustom_colors <- c(\"#1f78b4\", \"#33a02c\", \"#e31a1c\", \"#ff7f00\", \"#6a3d9a\")\n\n# Plot the time course of cumulative cases\nggplot(filtered_data, aes(x = as.Date(date), y = total_cases/1e6, color = location)) +\n  geom_line(size = 0.75) +\n  scale_y_continuous(labels = scales::comma, breaks = seq(0, 125, by = 25), limits = c(0, 125), expand = expansion(mult = c(0, 0.1))) +\n  scale_x_date(date_labels = \"%b '%y\", date_breaks = \"1 month\") +\n  scale_color_manual(values = custom_colors) +\n  labs(x = \"Date\", y = \"Cumulative Cases (Millions)\", color = \"Country\",\n       title = \"COVID-19 confirmed cases worldwide\",\n       subtitle = \"As of 11/05/2024\") +\n  expand_limits(y = 0) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6.5)) +\n  geom_label_repel(data = subset(filtered_data, date == max(date)), \n                     aes(label = total_cases/1e6), \n                     size = 3,\n                     box.padding = 0.5,\n                     point.padding = 0.1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot1-1.png){width=1152}\n:::\n:::\n\n\n\n\n# Task 4.2\n\n## Load Libraries\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-4_64db0a7b74b2fce55cabe10217d21f59'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n:::\n\n\n## Load world map data\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-5_729821b612ee664baccbbd6fd52ae24a'}\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\n```\n:::\n\n\n## Calculate Mortality Rate\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-6_e76bda7a0d41e894de1af518bc2eca1f'}\n\n```{.r .cell-code}\ncovid_mortality_tbl_processed <- covid_data_tbl_processed %>%\n  group_by(location) %>%\n  summarise(mortality_rate = sum(total_deaths_per_million, na.rm = TRUE) /10000000) %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  ))\n```\n:::\n\n\n## Combine Data\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-7_8202e5e9fb73d5f85f4ad807e2a5ea98'}\n\n```{.r .cell-code}\nworld <- left_join(world, covid_mortality_tbl_processed, by = c(\"region\" = \"location\"))\n```\n:::\n\n\n## Plot the world map with mortality rate\nI tried using geom_map, but the plot had no map in it and the issue could not be resolved.\nHence, I have used an alternative approach to plot the map using geom_polygon.\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-8_06b9b53ff8d477986d65b6049164e7aa'}\n\n```{.r .cell-code}\nggplot(world, aes(x = long, y = lat, group = group, fill = mortality_rate)) +\n  geom_polygon(color = \"black\") +\n  labs(title = \"Confirmed COVID-19 Deaths relative to size of population\", fill = \"Mortality Rate\") +\n  scale_fill_gradient(low = \"red\", high = \"black\", na.value = \"gray\")\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}